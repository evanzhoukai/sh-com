buildscript {
    repositories {
        maven {
            url 'http://nexus.mwbyd.cn/nexus/content/groups/public/'
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.22.RELEASE"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    group = 'cn.mwee'
    version = '1.0-SNAPSHOT'

    targetCompatibility = 1.8
    sourceCompatibility = 1.8

    [compileJava, compileTestJava].each() {
        //it.options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:-options"]
        it.options.compilerArgs += ["-Xlint:deprecation"]
        it.options.encoding = "UTF-8"
    }

    repositories {
        maven {
            url 'http://nexus.mwbyd.cn/nexus/content/groups/public/'
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        jcenter()
    }


    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    configurations {
        all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
        all*.exclude group: "commons-logging", module: "commons-logging"
        all*.exclude group: "ch.qos.logback", module: "logback-classic"
        all*.exclude group: "ch.qos.logback", module: "logback-core"
        all*.exclude group: "javax.servlet", module: "servlet-api"
        all*.exclude group: "javax.ws.rs", module: "javax.ws.rs-api"
        all*.exclude module: 'spring-boot-starter-logging'
    }

    ext['lombok.version'] = '1.18.10'

    def versions = [
            frameworkBom: '0.0.4-SNAPSHOT'
    ]

    dependencyManagement {
        dependencies {
            imports {
                mavenBom "cn.mwee:base_framework_bom:${versions.frameworkBom}"
            }
        }
        resolutionStrategy {
            cacheChangingModulesFor 1, 'minutes'
        }
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-test")

        compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
        compile('org.springframework.cloud:spring-cloud-starter-bus-kafka')
        compile('org.springframework.cloud:spring-cloud-starter-config')

        /*******************************************华丽的分割线*****************************************/

        compile("cn.mwee:base_spring_cloud_framework")
        compile("cn.mwee:mwee-mail-spring-boot-starter")
        compile("cn.mwee:mwee-redis-spring-boot-starter")
        compile("cn.mwee:mwee-rest-template-spring-boot-starter")
        compile("cn.mwee:mwee-base-mybatis-spring-boot-starter")
        compile("cn.mwee:mwee-metric-spring-boot-starter")
        compile("cn.mwee:mwee-health-check-spring-boot-starter")

        /*******************************************华丽的分割线*****************************************/

        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'

        testCompile "junit:junit"
    }
}



